
openapi: "3.1.0"
info:
    version: 1.0.0
    title: BringYour
    description: |
        BringYour is a web-standards VPN marketplace with an emphasis on 
        fast, secure internet everwhere.

        The API for BringYour bootstraps the `connect` protocol,
        and is the source of JWTs and other match-making transactions.
        
        The JWT returned by /auth routes does not have a clientId.
        The `connect` protocol requires a JWT with a clientId.
        Use the /network routes to obtain a JWT with a clientId.

        In the BringYour network:
        - a network name is a globally unique subnet (xyz.bringyour.network)
        - a clientId is a globally unique 16-byte address
        - clientIds are equivalent to IPv6, but are expressed as UDID
        - clients also have an IPv6 and IPv4 mapped to their clientId
        
        Outside of IP translation like taptun/utun, 
        clients are typically addressed via their clientId.

    termsOfService: https://bringyour.com/terms
    contact:
        name: BringYour
        email: info@bringyour.com
        url: https://bringyour.com
    x-logo:
        url: https://bringyour.com/res/images/bringyour-wordmark.png
        altText: BringYour
    license:
        name: Mozilla Public License, v. 2.0
        url: https://mozilla.org/MPL/2.0/
servers:
    - url: https://api.bringyour.com

security:
  - BearerAuth: []

paths:
    /stats/last-90:
        get:
            description: |
                Get network statistics for the last 90 days.
                The statistics are updated approximately every 60s.
            operationId: statsLast90
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StatsResult"

    /auth/login:
        post:
            description: |
                Start a login for a user authority.
                The user authority may be:
                - email
                - phone number
                - Apple JWT
                - Google JWT
            operationId: authLogin
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthLoginArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthLoginResult"
    
    /auth/login-with-password:
        post:
            description: |
                Password login for email and phone number.
            operationId: authLoginWithPassword
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthLoginWithPasswordArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthLoginWithPasswordResult"

    /auth/verify:
        post:
            description: |
                Verify ownership of email or phone number.
            operationId: authVerify
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthVerifyArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthVerifyResult"

    /auth/verify-send:
        post:
            description: |
                Send verification code to email or phone number.
            operationId: authVerifySend
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthVerifySendArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthVerifySendResult"

    /auth/password-reset:
        post:
            description: |
                Send password reset code to email or phone number.
            operationId: authPasswordReset
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthPasswordResetArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthPasswordResetResult"

    /auth/password-set:
        post:
            description: |
                Change password.
            operationId: authPasswordSet
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthPasswordSetArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthPasswordSetResult"

    /auth/network-check:
        post:
            description: |
                Check if the network name is available.
                A new network name must satisfy:
                - at least 3 characters different from an existing network name
                - at least 8 characters
                - domain name compatible (see RFC 5890)
                - not contain the dash (-) character (BringYour subdomains are reverse-flattened to a single level using dashes)
            operationId: authNetworkCheck
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthNetworkCheckArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthNetworkCheckResult"

    /auth/network-create:
        post:
            description: |
                Create a new network.
                A user authority can be associated with at most one network.
            operationId: authNetworkCreate
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthNetworkCreateArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthNetworkCreateResult"

    /network/auth-client:
        post:
            description: |
                Gain permission to use the `connect` protocol as the requested clientId,
                or assign a new clientId.
                Each network can have at most 128 clientIds.
                Above that number, new clientId requests will error until one or more
                existing clientIds are removed.
            operationId: networkAuthClient
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/NetworkAuthClientArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/NetworkAuthClientResult"

    /network/remove-client:
        post:
            description: |
                Remove a client from the network.
            operationId: networkRemoveClient
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/NetworkRemoveClientArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/NetworkRemoveClientResult"

    /network/clients:
        get:
            description: |
                Get the latest status of all clients on this network.
            operationId: networkClients
            security:
                - BearerAuth: []
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/NetworkClientsResult"

    /preferences/set-preferences:
        post:
            description: |
                Set account preferences.
            operationId: preferencesSetPreferences
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PreferencesSetArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PreferencesSetResult"

    /feedback/send-feedback:
        post:
            description: |
                Feedback.
            operationId: feedbackSendFeedback
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/FeedbackSendArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FeedbackSendResult"

    /network/provider-locations:
        get:
            description: |
                A list of locations and groups where there are at least one active provider
                in good health. 
                Note that a location or group will need to be mapped to an actual provider
                using `/network/find-providers`.
            operationId: networkProviderLocations
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FindLocationsResult"

    /network/find-provider-locations:
        post:
            description: |
                Search for locations and groups that match a query,
                where there are at least one active provider in good health. 
                The match algorithm accounts for typos and misspelling,
                and the tolerance can be tuned in the input.
                Note that a location or group will need to be mapped to an actual provider
                using `/network/find-providers`.
            operationId: networkFindProviderLocations
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/FindLocationsArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FindLocationsResult"

    /network/find-locations:
        post:
            description: |
                Search for locations and groups that match a query,
                regardless of whether an providers are active.
            operationId: networkFindLocations
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/FindLocationsArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FindLocationsResult"

    /network/find-providers:
        post:
            description: |
                Randomly sample providers that for a location or group,
                which are active and in good health.
                This allows random iteration by using the exclude input to mark
                visited providers.
            operationId: networkFindProviders
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/FindProvidersArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FindProvidersResult"

    /wallet/balance:
        get:
            description: |
                Get the balance for the USDC user custody wallet.
                The user custody wallet allows BringYour to query the balance,
                but the user must take actions against the wallet.
            operationId: walletBalance
            security:
                - BearerAuth: []
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/WalletBalanceResult"

    /wallet/validate-address:
        post:
            description: |
                Validate a USDC wallet address on the user custody wallet chain.
                This can be used to check whether an address can receive
                a transfer out from the user custody wallet.
                Please use this before initiating any transfer out to avoid lost funds.
            operationId: walletValidateAddress
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/WalletValidateAddressArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/WalletValidateAddressResult"

    /wallet/circle-init:
        post:
            description: |
                Initialize the Circle USDC user self custody wallet.
                This starts a process that must be completed by the user.
            operationId: walletCircleInit
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/WalletCircleInitArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/WalletCircleInitResult"

    /wallet/circle-transfer-out:
        post:
            description: |
                Set up a transfer from the Circle USDC user self custody wallet 
                to an address.
                This starts a process that must be completed by the user.
            operationId: walletCircleInit
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/WalletCircleTransferOutArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/WalletCircleTransferOutResult"

    /subscription/balance:
        get:
            description: |
                Get the current subscription status and transfer balance.
            operationId: subscriptionBalance
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SubscriptionBalanceArgs"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SubscriptionBalanceResult"

components:
    securitySchemes:
        BearerAuth:
            type: http
            scheme: bearer
            description: BringYour JWT

    schemas:
        StatsResult:
            type: object
            properties: {}
                # lookback:
                # createdTime:
                # allTransferData:
                # allTransferSummary:
                # allTransferSummaryRate:
                # allPacketsData:
                # allPacketsSummary:
                # allPacketsSummaryRate:
                # providersData:
                # providersSuperspeedData:
                # providersSummary:
                # providersSummarySuperspeed:
                # countriesData:
                # countriesSummary:
                # regionsData:
                # regionsSummary:
                # citiesData:
                # citiesSummary:
                # extenderTransferData:
                # extenderTransferSummary:
                # extenderTransferSummaryRate:
                # extendersData:
                # extendersSuperspeedData:
                # extendersSummary:
                # extendersSummarySuperspeed:
                # networksData:
                # networksSummary:
                # devicesData:
                # devicesSummary:
        AuthLoginArgs:
            type: object
            properties: {}
        AuthLoginResult:
            type: object
            properties: {}
        AuthLoginWithPasswordArgs:
            type: object
            properties: {}
        AuthLoginWithPasswordResult:
            type: object
            properties: {}
        AuthVerifyArgs:
            type: object
            properties: {}
        AuthVerifyResult:
            type: object
            properties: {}
        AuthVerifySendArgs:
            type: object
            properties: {}
        AuthVerifySendResult:
            type: object
            properties: {}
        AuthPasswordResetArgs:
            type: object
            properties: {}
        AuthPasswordResetResult:
            type: object
            properties: {}
        AuthPasswordSetArgs:
            type: object
            properties: {}
        AuthPasswordSetResult:
            type: object
            properties: {}
        AuthNetworkCheckArgs:
            type: object
            properties: {}
        AuthNetworkCheckResult:
            type: object
            properties: {}
        AuthNetworkCreateArgs:
            type: object
            properties: {}
        AuthNetworkCreateResult:
            type: object
            properties: {}
        NetworkAuthClientArgs:
            type: object
            properties: {}
        NetworkAuthClientResult:
            type: object
            properties: {}
        NetworkRemoveClientArgs:
            type: object
            properties: {}
        NetworkRemoveClientResult:
            type: object
            properties: {}
        NetworkClientsResult:
            type: object
            properties: {}
        PreferencesSetArgs:
            type: object
            properties: {}
        PreferencesSetResult:
            type: object
            properties: {}
        FeedbackSendArgs:
            type: object
            properties: {}
        FeedbackSendResult:
            type: object
            properties: {}
        FindLocationsArgs:
            type: object
            properties: {}
        FindLocationsResult:
            type: object
            properties: {}
        FindProvidersArgs:
            type: object
            properties: {}
        FindProvidersResult:
            type: object
            properties: {}
        WalletBalanceResult:
            type: object
            properties: {}
        WalletValidateAddressArgs:
            type: object
            properties: {}
        WalletValidateAddressResult:
            type: object
            properties: {}
        WalletCircleInitArgs:
            type: object
            properties: {}
        WalletCircleInitResult:
            type: object
            properties: {}
        WalletCircleTransferOutArgs:
            type: object
            properties: {}
        WalletCircleTransferOutResult:
            type: object
            properties: {}
        SubscriptionBalanceArgs:
            type: object
            properties: {}
        SubscriptionBalanceResult:
            type: object
            properties: {}









